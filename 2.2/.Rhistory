bad_index
for(item in kerr){
if(item > 2.0){
bad_index = append(bad_index, match(item, kerr))
}
}
bad_index
kerr[3]
kerr[4]
kerr[2]
a = c()
a = append(a, 1)
a
a = append(a, 2)
a
a = append(a, match(item, kerr))
a
length(kerr)
bad_index = c()
for(item in kerr){
if(item > 1.0){
bad_index = append(bad_index, item)
}
}
bad_index
duplicated(kerr)
if(duplicated(kerr)==TRUE){
print(j)
j=j+1
}
j=1
if(duplicated(kerr)==TRUE){
print(j)
j=j+1
}
j
a = duplicated(kerr)
a
for(item in a){
if(item==TRUE){
print item
}
}
for(item in a){
if(item==TRUE){
print(item)
}
}
for(item in a){
if(item==TRUE){
print(j)
j=j+1
}
}
1111-280
which(a=TRUE)
?which
kerr
which(kerr==99.000)
bad_index = c()
bad_index = which(kerr == 99.000)
kerr = kerr[-c(bad_index)]
for(item in kerr){
if(item > 1.0){
bad_index = append(bad_index, item)
}
}
length(kerr)
bad_index
?match
bad_index = c()
bad_index = which(kerr == 99.000)
kerr = kerr[-c(bad_index)]
length(kerr)
u = corr_cat$V3
uerr = corr_cat$V4
g = corr_cat$V5
gerr = corr_cat$V6
r = corr_cat$V7
rerr = corr_cat$V8
i_band = corr_cat$V9
i_band_err = corr_cat$V10
z = corr_cat$V11
zerr = corr_cat$V12
k = corr_cat$V23
kerr = corr_cat$V24
bad_index = c()
bad_index = which(kerr == 99.000)
kerr = kerr[-c(bad_index)]
length(kerr)
kerr
for(item in kerr){
if(item > 1.0){
bad_index = append(bad_index, match(item, kerr))
}
}
kerr = kerr[-c(bad_index)]
length(kerr)
bad_index
kerr = corr_cat$V24
bad_index = c()
bad_index = which(kerr == 99.000)
kerr = kerr[-c(bad_index)]
bad_index = c()
for(item in kerr){
if(item > 1.0){
bad_index = append(bad_index, match(item, kerr))
}
}
kerr = kerr[-c(bad_index)]
kerr
u = u[-c(bad_index)]
g = g[-c(bad_index)]
r = r[-c(bad_index)]
i_band = i_band[-c(bad_index)]
z = z[-c(bad_index)]
k = k[-c(bad_index)]
uerr = uerr[-c(bad_index)]
gerr = gerr[-c(bad_index)]
rerr = rerr[-c(bad_index)]
i_band_err = i_band_err[-c(bad_index)]
zerr = zerr[-c(bad_index)]
source('/home/emilio/HAWKI/products-inter-combine/functions_to_bimodal.r')
corr_cat = read.table('/home/emilio/HAWKI/products-inter-combine/chefs_FULL_catalog.dat')
u = corr_cat$V3
uerr = corr_cat$V4
g = corr_cat$V5
gerr = corr_cat$V6
r = corr_cat$V7
rerr = corr_cat$V8
i_band = corr_cat$V9
i_band_err = corr_cat$V10
z = corr_cat$V11
zerr = corr_cat$V12
k = corr_cat$V23
kerr = corr_cat$V24
#removing outliers on the k band:
bad_index = c()
bad_index = which(kerr == 99.000)
cols = remove_out(u, g, r, i_band, z, k, uerr,gerr, rerr, i_band_err, zerr, kerr)
source('/home/emilio/HAWKI/products-inter-combine/functions_to_bimodal.r')
remove_out()
cols = remove_out(u, g, r, i_band, z, k, uerr,gerr, rerr, i_band_err, zerr, kerr)
require(mixtools)
require(ggplot2)
require(mclust)
source('/home/emilio/HAWKI/products-inter-combine/functions_to_bimodal.r')
corr_cat = read.table('/home/emilio/HAWKI/products-inter-combine/chefs_FULL_catalog.dat')
u = corr_cat$V3
uerr = corr_cat$V4
g = corr_cat$V5
gerr = corr_cat$V6
r = corr_cat$V7
rerr = corr_cat$V8
i_band = corr_cat$V9
i_band_err = corr_cat$V10
z = corr_cat$V11
zerr = corr_cat$V12
k = corr_cat$V23
kerr = corr_cat$V24
#removing outliers on the k band:
bad_index = c()
bad_index = which(kerr == 99.000)
cols = remove_out(u, g, r, i_band, z, k, uerr,gerr, rerr, i_band_err, zerr, kerr, bad_index)
cols
df_cols$u
df_cols
df_cols = data.frame(u, g, r, i_band, z, k, uerr, gerr, rerr, i_band_err, zerr, kerr)
df_cols
df_cols$u
source('/home/emilio/HAWKI/products-inter-combine/functions_to_bimodal.r')
corr_cat = read.table('/home/emilio/HAWKI/products-inter-combine/chefs_FULL_catalog.dat')
u = corr_cat$V3
uerr = corr_cat$V4
g = corr_cat$V5
gerr = corr_cat$V6
r = corr_cat$V7
rerr = corr_cat$V8
i_band = corr_cat$V9
i_band_err = corr_cat$V10
z = corr_cat$V11
zerr = corr_cat$V12
k = corr_cat$V23
kerr = corr_cat$V24
#removing outliers on the k band:
bad_index = c()
bad_index = which(kerr == 99.000)
df_cols = data.frame(u, g, r, i_band, z, k, uerr, gerr, rerr, i_band_err, zerr, kerr)
cols = remove_out(df_cols, bad_index)
source('/home/emilio/HAWKI/products-inter-combine/functions_to_bimodal.r')
corr_cat = read.table('/home/emilio/HAWKI/products-inter-combine/chefs_FULL_catalog.dat')
u = corr_cat$V3
uerr = corr_cat$V4
g = corr_cat$V5
gerr = corr_cat$V6
r = corr_cat$V7
rerr = corr_cat$V8
i_band = corr_cat$V9
i_band_err = corr_cat$V10
z = corr_cat$V11
zerr = corr_cat$V12
k = corr_cat$V23
kerr = corr_cat$V24
bad_index = c()
bad_index = which(kerr == 99.000)
df_cols = data.frame(u, g, r, i_band, z, k, uerr, gerr, rerr, i_band_err, zerr, kerr)
cols = remove_out(df_cols, bad_index)
source('/home/emilio/HAWKI/products-inter-combine/functions_to_bimodal.r')
cols = remove_out(df_cols, bad_index)
source('/home/emilio/HAWKI/products-inter-combine/functions_to_bimodal.r')
cols = remove_out(df_cols, bad_index)
cols
bad_index = c()
for(item in kerr){
if(item > 1.0){
bad_index = append(bad_index, match(item, kerr))
}
}
cols = remove_out(df_cols, bad_index)
cols
cols$kerr
corr_cat = read.table('/home/emilio/HAWKI/products-inter-combine/chefs_FULL_catalog.dat')
u = corr_cat$V3
uerr = corr_cat$V4
g = corr_cat$V5
gerr = corr_cat$V6
r = corr_cat$V7
rerr = corr_cat$V8
i_band = corr_cat$V9
i_band_err = corr_cat$V10
z = corr_cat$V11
zerr = corr_cat$V12
k = corr_cat$V23
kerr = corr_cat$V24
#removing outliers on the k band:
bad_index = c()
bad_index = which(kerr == 99.000)
df_cols = data.frame(u, g, r, i_band, z, k, uerr, gerr, rerr, i_band_err, zerr, kerr)
cols = remove_out(df_cols, bad_index)
bad_index = c()
for(item in kerr){
if(item > 1.0){
bad_index = append(bad_index, match(item, kerr))
}
}
cols = remove_out(df_cols, bad_index)
source('/home/emilio/HAWKI/products-inter-combine/functions_to_bimodal.r')
source('/home/emilio/HAWKI/products-inter-combine/functions_to_bimodal.r')
corr_cat = read.table('/home/emilio/HAWKI/products-inter-combine/chefs_FULL_catalog.dat')
u = corr_cat$V3
uerr = corr_cat$V4
g = corr_cat$V5
gerr = corr_cat$V6
r = corr_cat$V7
rerr = corr_cat$V8
i_band = corr_cat$V9
i_band_err = corr_cat$V10
z = corr_cat$V11
zerr = corr_cat$V12
k = corr_cat$V23
kerr = corr_cat$V24
#removing outliers on the k band:
bad_index = c()
bad_index = which(kerr == 99.000)
df_cols = data.frame(u, g, r, i_band, z, k, uerr, gerr, rerr, i_band_err, zerr, kerr)
cols = remove_out(df_cols, bad_index)
bad_index = c()
for(item in kerr){
if(item > 1.0){
bad_index = append(bad_index, match(item, kerr))
}
}
cols = remove_out(df_cols, bad_index)
cols$kerr
source('/home/emilio/HAWKI/products-inter-combine/functions_to_bimodal.r')
corr_cat = read.table('/home/emilio/HAWKI/products-inter-combine/chefs_FULL_catalog.dat')
u = corr_cat$V3
uerr = corr_cat$V4
g = corr_cat$V5
gerr = corr_cat$V6
r = corr_cat$V7
rerr = corr_cat$V8
i_band = corr_cat$V9
i_band_err = corr_cat$V10
z = corr_cat$V11
zerr = corr_cat$V12
k = corr_cat$V23
kerr = corr_cat$V24
#removing outliers on the k band:
bad_index = c()
bad_index = which(kerr == 99.000)
bad_index
cat = read.table('N7457GC.dat')
setwd("~/MLE/Galaxies/7457")
setwd("~/MLE/Galaxies/7457")
cat = read.table('N7457GC.dat')
cat
b = cat$V5
bv = cat$V6
vr = cat$V7
v = bv-b
r = vr-v
r
v
b
v = abs(v)
v
bv
vr
plot(b, bv)
plot(v, vr)
plot(vr, v)
cat = read.table('N7457GC.dat')
v = cat$V5
bv = cat$V6
vr = cat$V7
b = bv+v
b
vr = vr-v
vr = r
r=vr
r
r = abs(r)
r
df = data.frame(b, v, r)
df
vr = v-r
plot(vr, v)
plot(bv, b)
br = b-r
plot(br, bv)
hist(bv)
hist(vr)
hist(br)
bv = b-v
hist(bv)
?plot
hist(bv, b, xlab='(b-v)(mag)', ylab=('b(mag)'))
plot(bv, b, xlab='(b-v)(mag)', ylab=('b(mag)'))
plot(bv, b, xlab='(B-V)(mag)', ylab=('B(mag)'))
plot(bv, b, xlab='(B-V) (mag)', ylab=('B (mag)'))
plot(vr, v, xlab='(V-R) (mag)', ylab=('V (mag)'))
plot(bv, br, xlab='(B-V) (mag)', ylab=('(B-R) (mag)'))
setwd("~/MLE/Galaxies/2768")
cat = read.table('N2768GC.dat')
cat
g = cat$V4
g
i = cat$V5
z = cat$V6
gi = g-i
gr = g-z
g = cat$V4
r = cat$V5
i = cat$V6
gi = g-i
gr = g-r
plot(gi, g, xlab='(G-I) (mag)', ylab='(G) (mag')
plot(gi, g, xlab='(G-I) (mag)', ylab='(G) (mag)')
plot(gi, g, ylab='(G-I) (mag)', xlab='(G) (mag)')
plot(gi, i, ylab='(G-I) (mag)', xlab='(i) (mag)')
plot(gi, i, xlab='(G-I) (mag)', ylab='(i) (mag)')
plot(gi, gr, xlab='(G-I) (mag)', ylab='(G-R) (mag)')
g
r
gr
gr = g-r
gr
g
r
cat
g = cat$V5
r = cat$V4
i = cat$V6
gr = g-r
gi = g-i
plot(gi, i, ylab='(G-I) (mag)', xlab='(i) (mag)')
plot(gi, i, xlab='(G-I) (mag)', ylab='(i) (mag)')
plot(gi, gr, xlab='(G-I) (mag)', ylab='(G-R) (mag)')
plot(gr, r, xlab='(G-R) (mag)', ylab='(R) (mag)')
setwd("~/MLE/Galaxies/3115")
cat = read.table('N3115GC.dat')
cat
cat = read.table('raw_Jennings_catalogue.dat', na.strings = c(999.999, 9999.))
cat
g = cat$V10
i = cat$V11
r = cat$V11
i = cat$V12
gr = g-r
gi = g-i
plot(gi, i, xlab='(G-I) (mag)', ylab='(i) (mag)')
plot(gi, gr, xlab='(G-I) (mag)', ylab='(G-R) (mag)')
gi
g = cat$V10
r = cat$V12
i = cat$V14
g
r
i
g = cat$V9
g
r = cat$V11
r
i = cat$V13
i
gi = g-i
gr = g-r
plot(gi, i, xlab='(G-I) (mag)', ylab='(i) (mag)')
min(i)
max(i)
?plot
plot(gi, i, xlab='(G-I) (mag)', ylab='(i) (mag)')
plot(gi, i, xlab='(G-I) (mag)', ylab='(i) (mag)', ylim=c(15,20))
plot(gi, i, xlab='(G-I) (mag)', ylab='(i) (mag)', ylim=c(15,25))
plot(gi, i, xlab='(G-I) (mag)', ylab='(i) (mag)')
plot(gi, i, xlab='(G-I) (mag)', ylab='(i) (mag)', ylim=c(15,25))
plot(gi, i, xlab='(G-I) (mag)', ylab='(i) (mag)')
plot(gr, r, xlab='(G-R) (mag)', ylab='(R) (mag)')
plot(gr, gi, xlab='(G-R) (mag)', ylab='(G-I) (mag)')
hist(gi, freq=FALSE)
est = normalmixEM(gi)
gi
gi2 = gi[-'NA']
gi2 = gi[-c('NA')]
gi2 = gi[-c(NA)]
gi2
gi2 = gi[!is.na(gi)]
gi2
est = normalmixEM(gi2)
plot(est, which=2)
summary(est)
mean(c(0))
mean(c(0.7304808, 0.943937))
kurt(gi)
kurtosis(gi)
?kurtosis
??kurtosis
plot(est, which=2)
View(cat)
gr2 = gi[!is.na(gr)]
est2 = normalmixEM(gr2)
plot(est2, which=2)
i
r
gr = g-r
gr2 = gr[!is.na(gr)]
est = normalmixEM(gr2)
plot(est, which=2)
hist(gr, bins=50)
hist(gr, bins=100)
hist(gr, breaks = 50)
F = cat$V5
fg = f-g
fg = F-g
fg
fg = fg[!is.na(fg)]
fg
hist(fg)
hist(fg, breaks='sturges')
hist(fg, breaks=50)
setwd("~/HAWKI/products-inter-combine")
cat = read.table('chefs_FULL_catalog.dat')
cat
view(cat)
View(cat)
V = cat$V21
hist(V)
setwd("~/MLE/Galaxies/2768")
setwd("~/MLE/2.2")
tab = read.table('test_GCdensity-circularbins.dat')
tab
tab = read.table('checkradius.dat')
tab
r
r = tab$V3
max(r)
max(r)*60
pi
pi*max(r)**2
r = r*60
pi*max(r)**2
amax = pi*max(r)**2
amax/20
gc = read.table('test_GCdensity-circularbins.dat')
gc
rgal = gc$V8
min(r)
min(r)*60
r
min(r)
rgal
length(rgal)
max(r)
r1 = sqrt((max(r)^2)-55822.6/pi)
r1
pi*r1**2
pi*max(r)**2-pi*r1**2
r
sort(r)
r =r/60
sort(r)
min(r)
r*60
r =r*60
min(r)
r2 = sqrt((55822.6/pi)+min(r)^2)
r2
r3 = sqrt((55822.6/pi)+133.542^2)
r3
r4 = sqrt((55822.6/pi)+r3^2)
r4
